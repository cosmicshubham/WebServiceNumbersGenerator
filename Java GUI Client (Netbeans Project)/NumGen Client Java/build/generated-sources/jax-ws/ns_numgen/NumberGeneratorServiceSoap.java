
package ns_numgen;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NumberGeneratorServiceSoap", targetNamespace = "NS_NumGen")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NumberGeneratorServiceSoap {


    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/primeRange")
    @WebResult(name = "primeRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "primeRange", targetNamespace = "NS_NumGen", className = "ns_numgen.PrimeRange")
    @ResponseWrapper(localName = "primeRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.PrimeRangeResponse")
    public String primeRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/compositeRange")
    @WebResult(name = "compositeRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "compositeRange", targetNamespace = "NS_NumGen", className = "ns_numgen.CompositeRange")
    @ResponseWrapper(localName = "compositeRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.CompositeRangeResponse")
    public String compositeRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/perfectSquaresRange")
    @WebResult(name = "perfectSquaresRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "perfectSquaresRange", targetNamespace = "NS_NumGen", className = "ns_numgen.PerfectSquaresRange")
    @ResponseWrapper(localName = "perfectSquaresRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.PerfectSquaresRangeResponse")
    public String perfectSquaresRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/fibonacciRange")
    @WebResult(name = "fibonacciRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "fibonacciRange", targetNamespace = "NS_NumGen", className = "ns_numgen.FibonacciRange")
    @ResponseWrapper(localName = "fibonacciRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.FibonacciRangeResponse")
    public String fibonacciRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @param n
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/randomNumbers")
    @WebResult(name = "randomNumbersResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "randomNumbers", targetNamespace = "NS_NumGen", className = "ns_numgen.RandomNumbers")
    @ResponseWrapper(localName = "randomNumbersResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.RandomNumbersResponse")
    public String randomNumbers(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high,
        @WebParam(name = "n", targetNamespace = "NS_NumGen")
        int n);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/powersofTwo")
    @WebResult(name = "powersofTwoResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "powersofTwo", targetNamespace = "NS_NumGen", className = "ns_numgen.PowersofTwo")
    @ResponseWrapper(localName = "powersofTwoResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.PowersofTwoResponse")
    public String powersofTwo(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/evenRange")
    @WebResult(name = "evenRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "evenRange", targetNamespace = "NS_NumGen", className = "ns_numgen.EvenRange")
    @ResponseWrapper(localName = "evenRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.EvenRangeResponse")
    public String evenRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/oddRange")
    @WebResult(name = "oddRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "oddRange", targetNamespace = "NS_NumGen", className = "ns_numgen.OddRange")
    @ResponseWrapper(localName = "oddRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.OddRangeResponse")
    public String oddRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

    /**
     * 
     * @param high
     * @param low
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "NS_NumGen/palindromeRange")
    @WebResult(name = "palindromeRangeResult", targetNamespace = "NS_NumGen")
    @RequestWrapper(localName = "palindromeRange", targetNamespace = "NS_NumGen", className = "ns_numgen.PalindromeRange")
    @ResponseWrapper(localName = "palindromeRangeResponse", targetNamespace = "NS_NumGen", className = "ns_numgen.PalindromeRangeResponse")
    public String palindromeRange(
        @WebParam(name = "low", targetNamespace = "NS_NumGen")
        int low,
        @WebParam(name = "high", targetNamespace = "NS_NumGen")
        int high);

}
